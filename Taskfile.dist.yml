version: "3"

env:
  GOPROXY: https://goproxy.io,direct
  APP_VERSION:
    sh: echo -n "${APP_VERSION:-$(git rev-parse --short HEAD)-dev}"
  UID:
    sh: '{{if ne OS "windows"}}id -u{{end}}'
  GID:
    sh: '{{if ne OS "windows"}}id -g{{end}}'

dotenv: [".env"]

includes:
  docker: ./scripts/tasks/docker.yml
  batocera: ./scripts/tasks/batocera.yml
  bazzite: ./scripts/tasks/bazzite.yml
  chimeraos: ./scripts/tasks/chimeraos.yml
  libreelec: ./scripts/tasks/libreelec.yml
  linux: ./scripts/tasks/linux.yml
  mac: ./scripts/tasks/mac.yml
  mister: ./scripts/tasks/mister.yml
  mistex: ./scripts/tasks/mistex.yml
  recalbox: ./scripts/tasks/recalbox.yml
  retropie: ./scripts/tasks/retropie.yml
  steamos: ./scripts/tasks/steamos.yml
  windows: ./scripts/tasks/windows.yml
  zigcc: ./scripts/tasks/zigcc.yml

tasks:
  build:
    vars:
      APP_BIN: '{{default "zaparoo" .APP_BIN}}'
      BUILD_OS: "{{default OS .BUILD_OS}}"
      BUILD_ARCH: "{{default ARCH .BUILD_ARCH}}"
      PLATFORM: '{{default (OS | replace "darwin" "mac") .PLATFORM}}'
      BUILD_DIR: "_build/{{.PLATFORM}}_{{.BUILD_ARCH}}"
      EXTRA_LDFLAGS: "{{.EXTRA_LDFLAGS}}"
    env:
      GO111MODULE: on
      CGO_ENABLED: 1
      GOARCH: "{{.BUILD_ARCH}}"
      GOOS: "{{.BUILD_OS}}"
      CGO_LDFLAGS: '{{if not .NO_LIBNFC}}-lnfc -lusb{{end}}'
      PLATFORM: '{{.PLATFORM}}'
      CC: "{{.CC}}"
      CXX: "{{.CXX}}"
      APP_VERSION: '{{default "dev" .APP_VERSION}}'
    cmds:
      - >-
        go build
        -ldflags "-X 'github.com/ZaparooProject/zaparoo-core/pkg/config.AppVersion=${APP_VERSION}'
        -linkmode external -extldflags
        '{{if not .NO_LIBNFC}}${CGO_LDFLAGS}{{end}}
        {{if not .NO_STATIC}}-static{{end}}'
        -s -w {{.EXTRA_LDFLAGS}}"
        -tags "netgo,osusergo,sqlite_omit_load_extension"
        -o "{{.BUILD_DIR}}/{{.APP_BIN}}"
        "./cmd/${PLATFORM}"

  clean:
    desc: Clean build artifacts (optionally specific platform/arch)
    vars:
      PLATFORM: '{{default "" .PLATFORM}}'
      ARCH: '{{default "" .ARCH}}'
      TARGET_DIR: '{{if and .PLATFORM .ARCH}}_build/{{.PLATFORM}}_{{.ARCH}}{{else if .PLATFORM}}_build/{{.PLATFORM}}_*{{else}}_build{{end}}'
    cmds:
      - '{{if eq OS "windows"}}powershell rm -Recurse -Force{{else}}rm -rf{{end}} {{.TARGET_DIR}}'

  test:
    desc: Run all tests
    cmds:
      - go test -v -race ./...

  test:coverage:
    desc: Run tests with coverage report
    cmds:
      - go test -v -race -coverprofile=coverage.out ./...
      - go tool cover -html=coverage.out -o coverage.html

  lint:
    desc: Run golangci-lint
    cmds:
      - golangci-lint run ./...

  lint-fix:
    desc: Run golangci-lint with auto-fixes
    cmds:
      - golangci-lint run --fix ./...

  vulncheck:
    desc: Run govulncheck for security vulnerabilities
    cmds:
      - govulncheck ./...

  nilcheck:
    desc: Run nilaway for nil-pointer analysis
    cmds:
      - nilaway ./...
